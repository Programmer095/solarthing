version "0.0.1-SNAPSHOT"
description = """SolarThing"""

buildscript {
    ext {
        junit5Version = '5.6.2'
        slf4jVersion = '1.7.30'
        log4jVersion = '2.13.3'
        jacksonVersion = '2.11.2'
        // retrofit is why we need allow-opens. context: https://stackoverflow.com/questions/60915381/retrofit2-maven-project-illegal-reflective-access-warning // https://github.com/square/retrofit/issues/3341
        retrofitVersion = "2.9.0"
        shadowVersion = '5.2.0'
        ioLibVersion = '2.1.0'
    }
}
allprojects {
    repositories {
        mavenLocal()
        mavenCentral()
        maven { url "https://plugins.gradle.org/m2/" }
        maven { url "https://oss.sonatype.org/content/repositories/snapshots/" }
        jcenter()
        google()
    }
}

subprojects {
    apply plugin: 'java-library'
    sourceCompatibility = 1.8
    targetCompatibility = 1.8
    repositories {
        maven { url "https://jitpack.io" }
        maven { url "https://repo.maven.apache.org/maven2" }
    }
    dependencies {
        testImplementation group: 'org.junit.jupiter', name: 'junit-jupiter-api', version: junit5Version
        testImplementation "org.junit.jupiter:junit-jupiter-params:$junit5Version"
        testImplementation group: 'org.junit.jupiter', name: 'junit-jupiter-engine', version: junit5Version
        // https://mvnrepository.com/artifact/com.google.code.findbugs/jsr305
        implementation group: 'com.google.code.findbugs', name: 'jsr305', version: '3.0.2'
        implementation 'org.jetbrains:annotations:15.0'
    }
    test {
        useJUnitPlatform()
    }
    gradle.projectsEvaluated {
        tasks.withType(JavaCompile){
            options.compilerArgs << "-Xlint:deprecation"
        }
    }
}
project(":common"){
    apply plugin: 'java'
    dependencies {
        api project(":core")
    }
}
project(":client"){
    apply plugin: 'java'
    dependencies {
        api project(":core")
        api project(":common")
        api project(":serviceapi")
    }
}
project(":serviceapi"){
    apply plugin: 'java'
    dependencies {
        api project(":core")
    }
}
project(":graphql"){
    apply plugin: 'java'
    dependencies {
        api project(":core")
        api project(":common")
    }
}

wrapper {
    gradleVersion = '6.5'
    distributionType = Wrapper.DistributionType.ALL
}
